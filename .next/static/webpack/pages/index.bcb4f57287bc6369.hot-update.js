"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./ethereum/factory.js":
/*!*****************************!*\
  !*** ./ethereum/factory.js ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var web3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3 */ \"./node_modules/web3/lib/esm/index.js\");\n/* harmony import */ var _ethereum_artifacts_contracts_CrossChainCampaign_sol_CrossChainCampaign_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ethereum/artifacts/contracts/CrossChainCampaign.sol/CrossChainCampaign.json */ \"./ethereum/artifacts/contracts/CrossChainCampaign.sol/CrossChainCampaign.json\");\n\n\nconst web3 = new web3__WEBPACK_IMPORTED_MODULE_0__[\"default\"](window.ethereum);\nconst campaignAddress = \"<0x32518cDEA3d50ec265eC5F6f983282B4eee01354>\";\nconst campaign = new web3.eth.Contract(_ethereum_artifacts_contracts_CrossChainCampaign_sol_CrossChainCampaign_json__WEBPACK_IMPORTED_MODULE_1__.abi, campaignAddress);\nconst contributeCrossChain = async (amount, receiverChainAddress, destinationChainSelector)=>{\n    const accounts = await web3.eth.getAccounts();\n    await campaign.methods.crossChainContribute(receiverChainAddress, destinationChainSelector).send({\n        from: accounts[0],\n        value: web3.utils.toWei(amount, \"ether\")\n    });\n    console.log(\"Sent \".concat(amount, \" ETH cross-chain to \").concat(receiverChainAddress));\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ldGhlcmV1bS9mYWN0b3J5LmpzIiwibWFwcGluZ3MiOiI7OztBQUF3QjtBQUM4RTtBQUV0RyxNQUFNRSxPQUFPLElBQUlGLDRDQUFJQSxDQUFDRyxPQUFPQyxRQUFRO0FBQ3JDLE1BQU1DLGtCQUFrQjtBQUN4QixNQUFNQyxXQUFXLElBQUlKLEtBQUtLLEdBQUcsQ0FBQ0MsUUFBUSxDQUFDUCw2R0FBWSxFQUFFSTtBQUVyRCxNQUFNSyx1QkFBdUIsT0FBT0MsUUFBUUMsc0JBQXNCQztJQUNoRSxNQUFNQyxXQUFXLE1BQU1aLEtBQUtLLEdBQUcsQ0FBQ1EsV0FBVztJQUUzQyxNQUFNVCxTQUFTVSxPQUFPLENBQ25CQyxvQkFBb0IsQ0FBQ0wsc0JBQXNCQywwQkFDM0NLLElBQUksQ0FBQztRQUFFQyxNQUFNTCxRQUFRLENBQUMsRUFBRTtRQUFFTSxPQUFPbEIsS0FBS21CLEtBQUssQ0FBQ0MsS0FBSyxDQUFDWCxRQUFRO0lBQVM7SUFFdEVZLFFBQVFDLEdBQUcsQ0FBQyxRQUFxQ1osT0FBN0JELFFBQU8sd0JBQTJDLE9BQXJCQztBQUNuRCIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxBU1VTXFxEZXNrdG9wXFxDYW1wYWlnbiAtIENvcHlcXGV0aGVyZXVtXFxmYWN0b3J5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBXZWIzIGZyb20gXCJ3ZWIzXCI7XHJcbmltcG9ydCBDYW1wYWlnbiBmcm9tIFwiLi4vZXRoZXJldW0vYXJ0aWZhY3RzL2NvbnRyYWN0cy9Dcm9zc0NoYWluQ2FtcGFpZ24uc29sL0Nyb3NzQ2hhaW5DYW1wYWlnbi5qc29uXCI7XHJcblxyXG5jb25zdCB3ZWIzID0gbmV3IFdlYjMod2luZG93LmV0aGVyZXVtKTtcclxuY29uc3QgY2FtcGFpZ25BZGRyZXNzID0gXCI8MHgzMjUxOGNERUEzZDUwZWMyNjVlQzVGNmY5ODMyODJCNGVlZTAxMzU0PlwiO1xyXG5jb25zdCBjYW1wYWlnbiA9IG5ldyB3ZWIzLmV0aC5Db250cmFjdChDYW1wYWlnbi5hYmksIGNhbXBhaWduQWRkcmVzcyk7XHJcblxyXG5jb25zdCBjb250cmlidXRlQ3Jvc3NDaGFpbiA9IGFzeW5jIChhbW91bnQsIHJlY2VpdmVyQ2hhaW5BZGRyZXNzLCBkZXN0aW5hdGlvbkNoYWluU2VsZWN0b3IpID0+IHtcclxuICBjb25zdCBhY2NvdW50cyA9IGF3YWl0IHdlYjMuZXRoLmdldEFjY291bnRzKCk7XHJcblxyXG4gIGF3YWl0IGNhbXBhaWduLm1ldGhvZHNcclxuICAgIC5jcm9zc0NoYWluQ29udHJpYnV0ZShyZWNlaXZlckNoYWluQWRkcmVzcywgZGVzdGluYXRpb25DaGFpblNlbGVjdG9yKVxyXG4gICAgLnNlbmQoeyBmcm9tOiBhY2NvdW50c1swXSwgdmFsdWU6IHdlYjMudXRpbHMudG9XZWkoYW1vdW50LCBcImV0aGVyXCIpIH0pO1xyXG5cclxuICBjb25zb2xlLmxvZyhgU2VudCAke2Ftb3VudH0gRVRIIGNyb3NzLWNoYWluIHRvICR7cmVjZWl2ZXJDaGFpbkFkZHJlc3N9YCk7XHJcbn07XHJcbiJdLCJuYW1lcyI6WyJXZWIzIiwiQ2FtcGFpZ24iLCJ3ZWIzIiwid2luZG93IiwiZXRoZXJldW0iLCJjYW1wYWlnbkFkZHJlc3MiLCJjYW1wYWlnbiIsImV0aCIsIkNvbnRyYWN0IiwiYWJpIiwiY29udHJpYnV0ZUNyb3NzQ2hhaW4iLCJhbW91bnQiLCJyZWNlaXZlckNoYWluQWRkcmVzcyIsImRlc3RpbmF0aW9uQ2hhaW5TZWxlY3RvciIsImFjY291bnRzIiwiZ2V0QWNjb3VudHMiLCJtZXRob2RzIiwiY3Jvc3NDaGFpbkNvbnRyaWJ1dGUiLCJzZW5kIiwiZnJvbSIsInZhbHVlIiwidXRpbHMiLCJ0b1dlaSIsImNvbnNvbGUiLCJsb2ciXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./ethereum/factory.js\n"));

/***/ })

});